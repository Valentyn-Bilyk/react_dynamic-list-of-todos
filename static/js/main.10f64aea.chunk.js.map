{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterOptions","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","title","completed","isSelected","cn","type","onClick","TodoFilter","query","setQuery","selectedOption","setSelectedOption","value","onChange","event","target","Object","entries","key","placeholder","style","pointerEvents","All","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","finally","href","email","name","App","setTodos","visibleTodos","arr","option","filter","toLowerCase","includes","Active","Completed","preparedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10f64aea.chunk.js","sourcesContent":["export enum FilterOptions {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\ntype Props = {\n  query: string;\n  setQuery: (str: string) => void;\n  selectedOption: string;\n  setSelectedOption: (str: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  selectedOption,\n  setSelectedOption,\n}) => {\n  const resetButton = () => {\n    setQuery('');\n    setSelectedOption(FilterOptions.All);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedOption}\n            onChange={(event) => (\n              setSelectedOption(event.target.value)\n            )}\n          >\n            {Object.entries(FilterOptions).map(([key, value]) => (\n              <option\n                key={key}\n                value={value}\n              >\n                {key}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetButton}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          title,\n          completed,\n        } = todo;\n\n        const isSelected = selectedTodo === todo;\n\n        return (\n          <tr data-cy=\"todo\" className=\"\" key={id}>\n            <td className=\"is-vcentered\">{id}</td>\n\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': !isSelected,\n                    'fa-eye-slash': isSelected,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo?.userId)\n        .then(setUser)\n        .finally(() => setIsLoading(false));\n    }\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={cn({\n                'has-text-danger': !selectedTodo?.completed,\n                'has-text-success': selectedTodo?.completed,\n              })}\n              >\n                {selectedTodo?.completed ? (\n                  'Done'\n                ) : (\n                  'Planned'\n                )}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { FilterOptions, TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nfunction preparedTodos(\n  arr: Todo[],\n  option: string,\n  query: string,\n) {\n  let todos = [...arr];\n\n  if (query) {\n    todos = todos.filter(todo => todo.title\n      .toLowerCase()\n      .includes(query.toLowerCase()));\n  }\n\n  if (option) {\n    switch (option) {\n      case FilterOptions.Active: {\n        return todos.filter(todo => !todo.completed);\n      }\n\n      case FilterOptions.Completed: {\n        return todos.filter(todo => todo.completed);\n      }\n\n      default: {\n        return todos;\n      }\n    }\n  }\n\n  return todos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .finally(() => setIsLoading(false));\n  });\n\n  const visibleTodos = preparedTodos(todos, selectedOption, query);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                selectedOption={selectedOption}\n                setSelectedOption={setSelectedOption}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}